---
apiVersion: v1
kind: Namespace
metadata:
  name: ${namespace}
---
apiVersion: v1
kind: ServiceAccount
metadata:
 name: kube-applier
 namespace: ${namespace}
---
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: kube-applier
  namespace: ${namespace}
subjects:
- kind: ServiceAccount
  name: kube-applier
  namespace: ${namespace}
roleRef:
  kind: ClusterRole
  name: cluster-admin
  apiGroup: rbac.authorization.k8s.io
---
apiVersion: "apps/v1"
kind: "Deployment"
metadata:
  name: "kube-applier"
  namespace: "${namespace}"
  labels:
    app: "kube-applier"
spec:
  replicas: 1
  selector:
    matchLabels:
      app: "kube-applier"
  template:
    metadata:
      labels:
        app: "kube-applier"
    spec:
      serviceAccountName: kube-applier
      containers:
        - name: "kube-applier"
          command:
            - "/kube-applier"
          env:
            - name: "REPO_PATH"
              value: "/k8s/resources"
            - name: "LISTEN_PORT"
              value: "2020"
          image: "govsvc/kube-applier:0.0.1541676847"
          ports:
            - containerPort: 2020
          volumeMounts:
            - name: "git-repo"
              mountPath: "/k8s"
        - name: "aws-git-sync"
          command:
            - "/git-sync"
          env:
            - name: "GIT_SYNC_REPO"
              value: "${git_repo}"
            - name: "GIT_SYNC_DEST"
              value: "resources"
          image: "govsvc/aws-git-sync:0.0.1541608150"
          ports:
            - containerPort: 2020
          volumeMounts:
            - name: "git-repo"
              mountPath: "/git"
      volumes:
        - name: "git-repo"
          emptyDir: {}
---
apiVersion: "v1"
kind: "Service"
metadata:
  name: "kube-applier"
  namespace: "${namespace}"
spec:
  ports:
    - name: "service"
      port: 80
      targetPort: 2020
  selector:
    app: "kube-applier"
