---
apiVersion: concourse.k8s.io/v1beta1
kind: Pipeline
metadata:
  labels:
    controller-tools.k8s.io: "1.0"
  name: build
spec:
  exposed: true
  pipelineString: |
    resource_types:
    - name: harbor
      type: docker-image
      privileged: true
      source:
        repository: govsvc/gsp-harbor-docker-image-resource
        tag: "0.0.1553882420"

    - name: github
      type: docker-image
      source:
        repository: "govsvc/concourse-github-resource"
        tag: "v0.0.1"

    github_source: &github_source
      uri: https://github.com/alphagov/verify-proxy-node.git
      repository: verify-proxy-node
      branch: master
      organization: alphagov
      github_api_token: ((github.api-token))
      approvers: ((trusted-developers.github-accounts))
      required_approval_count: 2
      commit_verification_keys: ((trusted-developers.gpg-keys))

    harbor_source: &harbor_source
      username: ((harbor.harbor_username))
      password: ((harbor.harbor_password))
      harbor:
        url: ((harbor.harbor_url))
        prevent_vul: "false"
      notary:
        url: ((harbor.notary_url))
        root_key: ((harbor.root_key))
        delegate_key: ((harbor.ci_key))
        passphrase:
          root: ((harbor.notary_root_passphrase))
          snapshot: ((harbor.notary_snapshot_passphrase))
          targets: ((harbor.notary_targets_passphrase))
          delegation: ((harbor.notary_delegation_passphrase))

    resources:
    - name: gateway-repo
      icon: gate
      type: github
      source:
        <<: *github_source

    - name: translator-repo
      icon: file-xml
      type: github
      source:
        <<: *github_source

    - name: parser-repo
      icon: page-next
      type: github
      source:
        <<: *github_source

    - name: stub-connector-repo
      icon: power-plug
      type: github
      source:
        <<: *github_source

    - name: cloudhsm-repo
      icon: folder-key-network
      type: github
      source:
        <<: *github_source

    - name: verify-service-provider-repo
      icon: marker-check
      type: git
      source:
        uri: https://github.com/alphagov/verify-service-provider.git
        branch: master

    - name: verify-service-provider-config-repo
      icon: gate
      type: github
      source:
        <<: *github_source

    - name: metadata-controller-repo
      icon: database-search
      type: github
      source:
        <<: *github_source
        uri: https://github.com/alphagov/verify-metadata-controller.git
        repository: verify-metadata-controller

    - name: acceptance-tests-repo
      icon: check-decagram
      type: github
      source:
        <<: *github_source

    - name: gateway-image
      icon: gate
      type: harbor
      source:
        <<: *harbor_source
        repository: registry.((cluster.domain))/eidas/gateway

    - name: translator-image
      icon: file-xml
      type: harbor
      source:
        <<: *harbor_source
        repository: registry.((cluster.domain))/eidas/translator

    - name: parser-image
      icon: page-next
      type: harbor
      source:
        <<: *harbor_source
        repository: registry.((cluster.domain))/eidas/parser

    - name: stub-connector-image
      icon: power-plug
      type: harbor
      source:
        <<: *harbor_source
        repository: registry.((cluster.domain))/eidas/stub-connector

    - name: cloudhsm-image
      icon: folder-key-network
      type: harbor
      source:
        <<: *harbor_source
        repository: registry.((cluster.domain))/eidas/cloudhsm

    - name: verify-service-provider-image
      icon: marker-check
      type: harbor
      source:
        <<: *harbor_source
        repository: registry.((cluster.domain))/eidas/verify-service-provider

    - name: metadata-controller-image
      icon: database-search
      type: harbor
      source:
        <<: *harbor_source
        repository: registry.((cluster.domain))/eidas/metadata-controller

    - name: acceptance-tests-image
      icon: check-decagram
      type: harbor
      source:
        <<: *harbor_source
        repository: registry.((cluster.domain))/eidas/acceptance-tests

    jobs:
    - name: build-gateway
      plan:
      - get: gateway-repo
        trigger: true
      - task: write-version
        config:
          platform: linux
          image_resource:
            type: docker-image
            source:
              repository: alpine/git
          inputs:
          - name: gateway-repo
          outputs:
          - name: versions
          run:
            path: /bin/ash
            args:
            - -e
            - -c
            - |
              cd gateway-repo
              echo "0.0.0-dev-$(git rev-parse --short HEAD)" > ../versions/current
      - put: gateway-image
        params:
          build: gateway-repo
          build_args:
            component: proxy-node-gateway
          tag_file: versions/current
          tag_as_latest: true
          tag_prefix: v
    - name: build-translator
      plan:
      - get: translator-repo
        trigger: true
      - task: write-version
        config:
          platform: linux
          image_resource:
            type: docker-image
            source:
              repository: alpine/git
          inputs:
          - name: translator-repo
          outputs:
          - name: versions
          run:
            path: /bin/ash
            args:
            - -e
            - -c
            - |
              cd translator-repo
              echo "0.0.0-dev-$(git rev-parse --short HEAD)" > ../versions/current
      - put: translator-image
        params:
          build: translator-repo
          dockerfile: translator-repo/proxy-node-translator/Dockerfile
          build_args:
            component: proxy-node-translator
          tag_file: versions/current
          tag_as_latest: true
          tag_prefix: v
    - name: build-parser
      plan:
      - get: parser-repo
        trigger: true
      - task: write-version
        config:
          platform: linux
          image_resource:
            type: docker-image
            source:
              repository: alpine/git
          inputs:
          - name: parser-repo
          outputs:
          - name: versions
          run:
            path: /bin/ash
            args:
            - -e
            - -c
            - |
              cd parser-repo
              echo "0.0.0-dev-$(git rev-parse --short HEAD)" > ../versions/current
      - put: parser-image
        params:
          build: parser-repo
          build_args:
            component: eidas-saml-parser
          tag_file: versions/current
          tag_as_latest: true
          tag_prefix: v
    - name: build-stub-connector
      serial_groups: [test]
      plan:
      - get: stub-connector-repo
        trigger: true
      - task: write-version
        config:
          platform: linux
          image_resource:
            type: docker-image
            source:
              repository: alpine/git
          inputs:
          - name: stub-connector-repo
          outputs:
          - name: versions
          run:
            path: /bin/ash
            args:
            - -e
            - -c
            - |
              cd stub-connector-repo
              echo "0.0.0-dev-$(git rev-parse --short HEAD)" > ../versions/current
      - put: stub-connector-image
        params:
          build: stub-connector-repo
          dockerfile: stub-connector-repo/stub-connector/Dockerfile
          tag_file: versions/current
          tag_as_latest: true
          tag_prefix: v
    - name: build-cloudhsm
      serial_groups: [pki]
      plan:
      - get: cloudhsm-repo
        trigger: true
      - task: write-version
        config:
          platform: linux
          image_resource:
            type: docker-image
            source:
              repository: alpine/git
          inputs:
          - name: cloudhsm-repo
          outputs:
          - name: versions
          run:
            path: /bin/ash
            args:
            - -e
            - -c
            - |
              cd cloudhsm-repo
              echo "0.0.0-dev-$(git rev-parse --short HEAD)" > ../versions/current
      - put: cloudhsm-image
        params:
          build: cloudhsm-repo/cloudhsm
          tag_file: versions/current
          tag_as_latest: true
          tag_prefix: v
    - name: build-verify-service-provider
      plan:
      - get: verify-service-provider-repo
        trigger: true
      - get: verify-service-provider-config-repo
        trigger: true
      - task: write-version
        config:
          platform: linux
          image_resource:
            type: docker-image
            source:
              repository: alpine/git
          inputs:
          - name: verify-service-provider-repo
          - name: verify-service-provider-config-repo
          outputs:
          - name: versions
          run:
            path: /bin/ash
            args:
            - -e
            - -c
            - |
              cd verify-service-provider-repo
              echo "0.0.0-dev-$(git rev-parse --short HEAD)" > ../versions/current
      - put: verify-service-provider-image
        params:
          build: verify-service-provider-repo
          build_args:
            VERIFY_USE_PUBLIC_BINARIES: "false"
          dockerfile: verify-service-provider-config-repo/proxy-node-vsp-config/Dockerfile.internal
          tag_file: versions/current
          tag_as_latest: true
          tag_prefix: v
    - name: build-metadata-controller
      serial_groups: [pki]
      plan:
      - get: metadata-controller-repo
        trigger: true
      - task: write-version
        config:
          platform: linux
          image_resource:
            type: docker-image
            source:
              repository: alpine/git
          inputs:
          - name: metadata-controller-repo
          outputs:
          - name: versions
          run:
            path: /bin/ash
            args:
            - -e
            - -c
            - |
              cd metadata-controller-repo
              echo "0.0.0-dev-$(git rev-parse --short HEAD)" > ../versions/current
      - put: metadata-controller-image
        params:
          cache: true
          cache_tag: latest
          build: metadata-controller-repo
          tag_file: versions/current
          tag_as_latest: true
          tag_prefix: v
    - name: build-acceptance-tests
      serial_groups: [test]
      plan:
      - get: acceptance-tests-repo
        trigger: true
      - task: write-version
        config:
          platform: linux
          image_resource:
            type: docker-image
            source:
              repository: alpine/git
          inputs:
          - name: acceptance-tests-repo
          outputs:
          - name: versions
          run:
            path: /bin/ash
            args:
            - -e
            - -c
            - |
              cd acceptance-tests-repo
              echo "0.0.0-dev-$(git rev-parse --short HEAD)" > ../versions/current
      - put: acceptance-tests-image
        params:
          build: acceptance-tests-repo/proxy-node-acceptance-tests
          tag_file: versions/current
          tag_as_latest: true
          tag_prefix: v
