---
apiVersion: concourse.k8s.io/v1beta1
kind: Pipeline
metadata:
  labels:
    controller-tools.k8s.io: "1.0"
  name: deploy
spec:
  exposed: true
  pipelineString: |

    github_source: &github_source
      uri: https://github.com/alphagov/verify-proxy-node.git
      organization: alphagov
      owner: alphagov
      repository: verify-proxy-node
      github_api_token: ((github.api-token))
      access_token: ((github.api-token))
      approvers: ((trusted-developers.github-accounts))
      required_approval_count: 2
      commit_verification_keys: ((trusted-developers.gpg-keys))

    task_toolbox: &task_toolbox
      type: docker-image
      source:
        repository: govsvc/task-toolbox
        tag: "1.2.0"

    resource_types:

    - name: github
      type: registry-image
      source:
        repository: "govsvc/concourse-github-resource"
        tag: "v0.0.1"

    resources:

    - name: release
      type: github-release
      source:
        <<: *github_source

    - name: daily
      type: time
      icon: update
      source:
        interval: 12h
        start: 8:00 AM
        stop: 8:00 PM

    jobs:

    - name: deploy-nl-integration
      serial: true
      plan:

      - get: release
        trigger: true

      - get: daily
        trigger: true

      - task: render-manifests
        config:
          platform: linux
          image_resource: *task_toolbox
          inputs:
          - name: release
          outputs:
          - name: manifests
          params:
            CLUSTER_NAME: ((cluster.name))
            CLUSTER_DOMAIN: ((cluster.domain))
            RELEASE_NAME: nl-integration
            RELEASE_NAMESPACE: ((namespace-deployer.namespace))
            CLUSTER_PRIVATE_KEY: ((cluster.privateKey))
            CONNECTOR_ENTITY_ID: https://acc-eidas.minez.nl/EidasNodeC/ConnectorMetadata
            CONNECTOR_METADATA_URL: https://acc-eidas.minez.nl/EidasNodeC/ConnectorMetadata
            CONNECTOR_METADATA_SIGNING_TRUSTSTORE_BASE64: MIIElgIBAzCCBE8GCSqGSIb3DQEHAaCCBEAEggQ8MIIEODCCBDQGCSqGSIb3DQEHBqCCBCUwggQhAgEAMIIEGgYJKoZIhvcNAQcBMCkGCiqGSIb3DQEMAQYwGwQUczBlZZQgOgZt7l/PifTjAeMfPYwCAwDDUICCA+BjCH3vmYqE9oF8x0tGAWoHDYTRpsuc+Ekpsy1U8RfT4ayGiW5uFiv0J2IwJj8qYbgPYHDweKdL7vtJmijt7+M+FlwhgOmcjgmhHBeirWDoHm3nHNeZ36YsdXi2P3DT6YmHU4fVUeZ1ofNu3v3ie662w7DKZ7geb3lodUvWtVcKwjVgW8nMjn8wsrtpM4WNkBmeJ8Z/Um0QiTGFj0K9EiM/OVReEXqTde2FxAkBc6ckd3NR2slrH9lvnD5mOrKYgVoVInnkdwo9uY4jpO5Tdfn57m2ycw5ZsL3L3HKEJm1e7w0XokuDGB5nEmrRGNZY6wrWvwvSmrFLXqja4afMPntMzv8yoZ/6vp7JOsTm2D01f+6hwoKPz+l9qaQir+CG4GZGao8BE8kdm4pD2EZYofquDqsIQxdMtkARiSTLRUo73/KolX/g3CX41lVkNJQk6eqtT0t7dNj/klCp2iT3zzkuS7Ud7cSo8B/lHhFnMP7wRi3lxMbNGptl3KRsrpx68tKxWeX/uR0ng+DBTNdPm6rp0ZCXq6ylzqWczEMabA1VLCjM6zbxsQGy2Wf53LqCVqCth12Ue000kwnkquw8BsAnGVqqVVI0RsRCyCA+zezQJsnI6YtpEjhIyA8O5ccTgp/UfnVv8V5IqLZjyDyOdCWWMwNZLnpk+UMp/F7SphPPykvVw1S3Bl1eP1bOYcGUveVPlMOCqUkJmiXn9noaZcj6ZY9HMHkscvh0U5fLpDYTFQJD883jo4u5xDyJ0WXFTTcoNs1quypN3N5UIEL2VxCZ38X8qSUNqXy+RBq94YtJFwizjKRBpq7qRYQ63Amd6F5insYcOt9HSUuL2eYdBNHIPLYzgLd9alW3zDPL8j9At25QyAIWtPdFkLKB2IoOMjwwvM8+m4vT9h5WALolDFb14xmXpTMP6XW72yNo65XDzjPZaQDnyIZB4vQxf6SDOS1z82r50F/mLW8MO9G9WUikTR3dcr2kZAF9d5gEDYFt7qt7weL89D64ckmIJfEvQ8Bl256krUus88ZnOF4qpbZFZuswNyo2WAx7Jb8+TA/rwWnk0CGZ5Flry1H2/poAYHa5UP3BkVeOOCxIY0YHrn469scMbZQjVajxvQ7/B6UcmIQ4jYF+La16NQnNTd9i6x0JaFF8QKPGTrlYadxGWtfeCe7n1yFuqIv2ezUlEwUcK6tCxfxqr7Z3Rma00025Ljhb1bXC8saao7TqDuzOI5KObVpmFcuuEcg4Dx4KfWokZLmyndrda4B81SJazB4GUbsCATPZurZgvmjqhMiWAvUMQG8J1GPzTBoY8IoHi+mMnDA+MCEwCQYFKw4DAhoFAAQUmUOGxKuWKrjGPP+HwlER169fzcEEFFadqe16I+07dZsV6XUvOlMxwKN3AgMBhqA=
          run:
            path: /bin/bash
            args:
            - -eu
            - -c
            - |
              echo "preparing keyring..."
              echo "${CLUSTER_PRIVATE_KEY}" > key
              gpg --import key
              gpg --export-secret-keys > ~/.gnupg/pubring.gpg
              KEY_ID="$(gpg --list-secret-keys --with-colons  | awk -F: '/uid:/ {print $10}' | head -n1)"
              echo "verifying package"
              helm verify ./release/*.tgz
              echo "rendering chart with release name '${RELEASE_NAME}' and namespace '${RELEASE_NAMESPACE}'..."
              helm template \
                --name "${RELEASE_NAME}" \
                --namespace "${RELEASE_NAMESPACE}" \
                --set "global.cluster.name=${CLUSTER_NAME}" \
                --set "global.cluster.domain=${CLUSTER_DOMAIN}" \
                --set "connector.entityID=${CONNECTOR_ENTITY_ID}" \
                --set "connector.metadataURL=${CONNECTOR_METADATA_URL}" \
                --set "connector.metadataSigningTruststoreBase64=${CONNECTOR_METADATA_SIGNING_TRUSTSTORE_BASE64}" \
                --output-dir "./manifests/" \
                ./release/*.tgz

      - task: deploy-manifests
        config:
          platform: linux
          image_resource: *task_toolbox
          inputs:
          - name: manifests
          params:
            KUBERNETES_SERVICE_ACCOUNT: ((namespace-deployer))
            KUBERNETES_TOKEN: ((namespace-deployer.token))
            KUBERNETES_API: kubernetes.default.svc
            RELEASE_NAME: nl-integration
            RELEASE_NAMESPACE: ((namespace-deployer.namespace))
            APP_NAME: proxy-node
          run:
            path: /bin/bash
            args:
            - -eu
            - -c
            - |
              echo "configuring kubectl"
              echo "${KUBERNETES_SERVICE_ACCOUNT}" | jq -r .["ca.crt"] > ca.crt
              kubectl config set-cluster self --server=https://kubernetes.default --certificate-authority=ca.crt
              kubectl config set-credentials deployer --token "${KUBERNETES_TOKEN}"
              kubectl config set-context deployer --user deployer --cluster self
              kubectl config use-context deployer

              echo "applying chart to ${RELEASE_NAMESPACE} namespace..."
              kapp deploy \
                -y \
                --namespace "${RELEASE_NAMESPACE}" \
                --allow-ns "${RELEASE_NAMESPACE}" \
                --app "${APP_NAME}" \
                --diff-changes \
                --labels "app=${APP_NAME}" \
                -f ./manifests/
